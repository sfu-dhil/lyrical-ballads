<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="buildLyricalBallads" default="all">
   
  
   <property name="debug" value="0"/> 
   
   <property environment="env"/>
   
   
   <property name="tmp" value="${basedir}/tmp"/>
   
   <property name="src.dir" value="${basedir}/ballad_data"/>
   <property name="src.xml.dir" value="${src.dir}/data"/>
   <property name="src.facs.dir" value="${src.dir}/facs"/>
   
   <property name="dist.dir" value="${basedir}/public"/>
   <property name="dist.xml.dir" value="${dist.dir}/xml"/>
   <property name="dist.facs.dir" value="${dist.dir}/facs"/>
   
   <property name="code.dir" value="${basedir}/static"/>
   <property name="xsl.dir" value="${code.dir}/xsl"/>
   <property name="lib.dir" value="${basedir}/lib"/>

   <property name="saxon.jar" value="${lib.dir}/saxon10HE.jar"/>
   
   <condition property="sass-installed">
      <available file="sass"
         filepath="${env.PATH}"/>
   </condition>
   
   <condition property="sassDir" value="" else="/tmp/sass/">
      <istrue value="${sass-installed}"/>
   </condition>
   
   <condition property="saxon-installed">
      <available type="file" file="${saxon.jar}"/>
   </condition>
   
   
   <target name="init">
      <delete dir="${dist.dir}"/>
      <mkdir dir="${dist.dir}"/>
   </target>
   
   
   <target name="getSass" unless="sass-installed">
      <get 
         src="https://github.com/sass/dart-sass/releases/download/1.33.0/dart-sass-1.33.0-linux-x64.tar.gz"
         dest="/tmp/sass.tar.gz"/>
      <!--First make a directory-->
      <mkdir dir="${sassDir}"/>
      <exec executable="tar">
         <arg line="-xf /tmp/sass.tar.gz -C ${sassDir} --strip-components 1"/>
      </exec>
   </target>
   
   <target name="getSaxon" unless="saxon-installed">
      <mkdir dir="${lib.dir}"/>
      <get src="https://repo1.maven.org/maven2/net/sf/saxon/Saxon-HE/10.3/Saxon-HE-10.3.jar" dest="${saxon.jar}"/>
   </target>
   
   <target name="deps" depends="getSaxon, getSass"/>
   
   <!--First, move the data over-->
   
   <target name="copyXML">
      <description>Copies all of the necessary XML files over</description>
      <mkdir dir="${dist.xml.dir}"/>
      <copy todir="${dist.xml.dir}">
         <fileset dir="${src.xml.dir}">
            <include name="*.xml"/>
            <exclude name="*.MODS.xml"/>
         </fileset>
      </copy>
   </target>
   
   <target name="copyFacs">
      <description>Copies all of the facsimile files over</description>
      <mkdir dir="${dist.facs.dir}"/>
      <apply executable="convert" dest="${dist.facs.dir}">
         <srcfile/>
         <targetfile/>
         <fileset dir="${src.facs.dir}">
            <include name="*"/>
         </fileset>
         <globmapper from="*.png" to="*.jpg"/>
      </apply>
   </target>
   
   <target name="assets">
      <description>Copies over the site assets and processes them.</description>
      <copy todir="${dist.dir}">
         <fileset dir="${code.dir}">
            <include name="**/**"/>
            <exclude name="template.html"/>
            <exclude name="xsl/**"/>
         </fileset>
      </copy>
      
      <!--Need to prepend the sassDir so that if it's not installed,
         it can still be run-->
      <exec executable="${sassDir}sass">
         <arg line="${dist.dir}/scss:${dist.dir}/css"/>
      </exec>
   </target>
   
   
   
   <target name="html">
      <description>Converts all of the XML files to HTML.</description>
      <java jar="${saxon.jar}" fork="true" failOnError="true">
         <arg line="-xsl:${xsl.dir}/html_master.xsl"/>
         <arg line="-it:go"/>
         <arg line="dist=${dist.dir}"/>
      </java>
   </target>
   
   <target name="search">
      <ant antfile="staticSearch/build.xml" inheritall="no">
         <property name="ssConfigFile" value="${basedir}/staticSearch_config.xml"/>
      </ant>
      <java jar="${saxon.jar}" fork="true" failOnError="true">
         <arg line="-xsl:${xsl.dir}/postprocess-search.xsl"/>
         <arg line="-s:${dist.dir}/search.html"/>
         <arg line="-o:${dist.dir}/search.tmp.html"/>
      </java>
      <move file="${dist.dir}/search.tmp.html" tofile="${dist.dir}/search.html"/>
   </target>
   
   
   <target name="all" depends="init, deps, copyXML, copyFacs, assets, html, search"/>
   
  
   
   
   
</project>
